[{"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\index.js":"1","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\App.js":"2","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\pages\\SearchBooks.js":"3","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\components\\Navbar.js":"4","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\pages\\SavedBooks.js":"5","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\components\\LoginForm.js":"6","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\components\\SignupForm.js":"7","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\queries.js":"8","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\API.js":"9","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\mutations.js":"10","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\localStorage.js":"11","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\auth.js":"12"},{"size":266,"mtime":1669999801235,"results":"13","hashOfConfig":"14"},{"size":1647,"mtime":1674513905123,"results":"15","hashOfConfig":"14"},{"size":4975,"mtime":1674247832848,"results":"16","hashOfConfig":"14"},{"size":2524,"mtime":1669999801235,"results":"17","hashOfConfig":"14"},{"size":2402,"mtime":1674250971183,"results":"18","hashOfConfig":"14"},{"size":2697,"mtime":1674240332734,"results":"19","hashOfConfig":"14"},{"size":3458,"mtime":1674236534240,"results":"20","hashOfConfig":"14"},{"size":293,"mtime":1674248832196,"results":"21","hashOfConfig":"14"},{"size":222,"mtime":1674246584761,"results":"22","hashOfConfig":"14"},{"size":1154,"mtime":1674247828127,"results":"23","hashOfConfig":"14"},{"size":793,"mtime":1669999801236,"results":"24","hashOfConfig":"14"},{"size":1234,"mtime":1669999801236,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"z4i72t",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\index.js",[],["53","54"],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\App.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\pages\\SearchBooks.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\components\\Navbar.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\pages\\SavedBooks.js",["55"],"import React from 'react';\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from 'react-bootstrap';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const { loading, data: userData } = useQuery(GET_ME);\n  const [removeBook] = useMutation(REMOVE_BOOK);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await removeBook({ variables: { bookId } });\n\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (!userData) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.me.savedBooks.length\n            ? `Viewing ${userData.me.savedBooks.length} saved ${\n                userData.me.savedBooks.length === 1 ? 'book' : 'books'\n              }:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.me.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\components\\LoginForm.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\components\\SignupForm.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\queries.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\API.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\jacob\\homework-root\\book-search-engine-refactor\\client\\src\\utils\\auth.js",["56"],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":17,"column":11,"nodeType":"63","messageId":"64","endLine":17,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":49,"column":1,"nodeType":"67","endLine":49,"endColumn":34},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]