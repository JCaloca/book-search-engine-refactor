{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\homework-root\\\\book-search-engine-refactor\\\\client\\\\src\\\\pages\\\\SearchBooks.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (!searchInput) {\n      return false;\n    }\n    try {\n      const response = await searchGoogleBooks(searchInput);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || ['No author to display'],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || ''\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async bookId => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const response = await saveBook(bookToSave, token);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Search for Books!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : 'Search for a book to begin'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, searchedBooks.map(book => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: book.bookId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, book.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: book.image,\n      alt: `The cover for ${book.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, \"Authors: \", book.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, book.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveBook(book.bookId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, (savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId)) ? 'This book has already been saved!' : 'Save this Book!')));\n  }))));\n};\nexport default SearchBooks;","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBook","searchGoogleBooks","saveBookIds","getSavedBookIds","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","error","handleSaveBook","bookToSave","find","token","loggedIn","getToken","e","target","value","length","some","savedBookId"],"sources":["C:/Users/jacob/homework-root/book-search-engine-refactor/client/src/pages/SearchBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}