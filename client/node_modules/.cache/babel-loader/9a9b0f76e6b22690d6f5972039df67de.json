{"ast":null,"code":"import _objectSpread from\"C:/Users/jacob/homework-root/book-search-engine-refactor/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import SearchBooks from'./pages/SearchBooks';import SavedBooks from'./pages/SavedBooks';import Navbar from'./components/Navbar';// Construct our main GraphQL API endpoint\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var httpLink=createHttpLink({uri:'/graphql'});// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nvar authLink=setContext(function(_,_ref){var headers=_ref.headers;// get the authentication token from local storage if it exists\nvar token=localStorage.getItem('id_token');// return the headers to the context so httpLink can read them\nreturn{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):''})};});var client=new ApolloClient({// Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\nlink:authLink.concat(httpLink),cache:new InMemoryCache()});function App(){return/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:SearchBooks}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/saved\",component:SavedBooks}),/*#__PURE__*/_jsx(Route,{path:\"*\",component:/*#__PURE__*/_jsx(\"h1\",{className:\"display-2\",children:\"Wrong page!\"})})]})]})})});}export default App;","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","BrowserRouter","Router","Routes","Route","SearchBooks","SavedBooks","Navbar","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"sources":["C:/Users/jacob/homework-root/book-search-engine-refactor/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Routes>\n            <Route exact path=\"/\" component={SearchBooks} />\n            <Route exact path=\"/saved\" component={SavedBooks} />\n            <Route\n              path=\"*\"\n              component={<h1 className=\"display-2\">Wrong page!</h1>}\n            />\n          </Routes>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"oJAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OACEC,YAAY,CACZC,aAAa,CACbC,cAAc,CACdC,cAAc,KACT,gBAAgB,CACvB,OAASC,UAAU,KAAQ,6BAA6B,CACxD,OAASC,aAAa,GAAIC,OAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAOC,YAAW,KAAM,qBAAqB,CAC7C,MAAOC,WAAU,KAAM,oBAAoB,CAC3C,MAAOC,OAAM,KAAM,qBAAqB,CAExC;AAAA,6IACA,GAAMC,SAAQ,CAAGT,cAAc,CAAC,CAC9BU,GAAG,CAAE,UACP,CAAC,CAAC,CAEF;AACA,GAAMC,SAAQ,CAAGV,UAAU,CAAC,SAACW,CAAC,MAAkB,IAAdC,QAAO,MAAPA,OAAO,CACvC;AACA,GAAMC,MAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC9C;AACA,MAAO,CACLH,OAAO,gCACFA,OAAO,MACVI,aAAa,CAAEH,KAAK,kBAAaA,KAAK,EAAK,EAAE,EAEjD,CAAC,CACH,CAAC,CAAC,CAEF,GAAMI,OAAM,CAAG,GAAIrB,aAAY,CAAC,CAC9B;AACAsB,IAAI,CAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC,CAC/BY,KAAK,CAAE,GAAIvB,cAAa,EAC1B,CAAC,CAAC,CAEF,QAASwB,IAAG,EAAG,CACb,mBACE,KAAC,cAAc,EAAC,MAAM,CAAEJ,MAAO,uBAC7B,KAAC,MAAM,wBACL,wCACE,KAAC,MAAM,IAAG,cACV,MAAC,MAAM,yBACL,KAAC,KAAK,EAAC,KAAK,MAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAEZ,WAAY,EAAG,cAChD,KAAC,KAAK,EAAC,KAAK,MAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAEC,UAAW,EAAG,cACpD,KAAC,KAAK,EACJ,IAAI,CAAC,GAAG,CACR,SAAS,cAAE,WAAI,SAAS,CAAC,WAAW,yBAAkB,EACtD,GACK,GACR,EACI,EACM,CAErB,CAEA,cAAee,IAAG"},"metadata":{},"sourceType":"module"}